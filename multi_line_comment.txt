# No multi line comments, paste stuff here 

batch_size = 32
img_height = 150
img_width = 150

train_ds = tf.keras.preprocessing.image_dataset_from_directory(
    image_folder,
    validation_split=0.2,  # 20 percent of the images are for validation, the rest for training. Not needed when model is generating images?
    subset="training",
    seed=123,
    image_size=(img_height, img_width),
    batch_size=batch_size)

val_ds = tf.keras.preprocessing.image_dataset_from_directory(
    image_folder,
    validation_split=0.2,
    subset="validation",
    seed=123,
    image_size=(img_height, img_width),
    batch_size=batch_size)

print(train_ds.class_names)

# image_folder = pathlib.Path('./data/images')
# images = list(image_folder.glob('*.jpg'))

list_ds = tf.data.Dataset.list_files('./data/images/*.jpg', shuffle=False)

image_count = len(list_ds)

# Tensorflow tutorial functions
def img_from_path(file_path):
    img = tf.io.read_file(file_path)
    return decode_img(img)

def decode_img(img):
    # convert the compressed string to a 3D uint8 tensor
    return tf.io.decode_jpeg(img, channels=3)

for e in list_ds.take(1):
    print(img_from_path(e))